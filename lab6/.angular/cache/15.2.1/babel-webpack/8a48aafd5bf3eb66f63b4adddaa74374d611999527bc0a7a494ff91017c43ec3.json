{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../album.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction AlbumsComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\")(2, \"a\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AlbumsComponent_div_11_div_1_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const album_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.removeAlbum(album_r3.id));\n    });\n    i0.ɵɵtext(5, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const album_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/albums/\", album_r3.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", album_r3.id, \". \", album_r3.title, \" \");\n  }\n}\nfunction AlbumsComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AlbumsComponent_div_11_div_1_Template, 6, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.albums);\n  }\n}\nfunction AlbumsComponent_h3_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Albums are loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AlbumsComponent {\n  constructor(postService) {\n    this.postService = postService;\n    this.albums = [];\n    this.newAlbum = {};\n    this.loaded = true;\n  }\n  getAlbums() {\n    this.loaded = false;\n    this.postService.getAlbums().subscribe(albums => {\n      this.albums = albums;\n      this.loaded = true;\n    });\n  }\n  ngOnInit() {\n    this.getAlbums();\n  }\n  removeAlbum(id) {\n    this.albums = this.albums.filter(x => x.id !== id);\n  }\n  addAlbum() {\n    if (this.newAlbum.title.length == 0 || this.newAlbum.id <= this.albums[this.albums.length - 1].id) return;\n    this.newAlbum.userId = this.albums[0].userId;\n    this.loaded = false;\n    this.postService.addAlbum(this.newAlbum).subscribe(album => {\n      this.albums.unshift(album);\n      this.loaded = true;\n      this.newAlbum = {};\n    });\n  }\n}\nAlbumsComponent.ɵfac = function AlbumsComponent_Factory(t) {\n  return new (t || AlbumsComponent)(i0.ɵɵdirectiveInject(i1.AlbumService));\n};\nAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AlbumsComponent,\n  selectors: [[\"app-albums\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[1, \"add-album\"], [\"for\", \"id\"], [\"type\", \"text\", \"id\", \"id\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"title\"], [\"id\", \"title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [\"class\", \"album\", 4, \"ngFor\", \"ngForOf\"], [1, \"album\"], [1, \"album-title\", 3, \"routerLink\"], [\"id\", \"remove\", 3, \"click\"]],\n  template: function AlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Album List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"fieldset\", 0)(3, \"label\", 1);\n      i0.ɵɵtext(4, \"ID : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AlbumsComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.newAlbum.id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Title : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AlbumsComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.newAlbum.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AlbumsComponent_Template_button_click_9_listener() {\n        return ctx.addAlbum();\n      });\n      i0.ɵɵtext(10, \"Add post\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, AlbumsComponent_div_11_Template, 2, 1, \"div\", 6);\n      i0.ɵɵtemplate(12, AlbumsComponent_h3_12_Template, 2, 0, \"h3\", 6);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.newAlbum.id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newAlbum.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loaded);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.DefaultValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IA8BEA,8BAAgD;IAI1CA,YACF;IAAAA,iBAAI;IAGNA,kCAAoD;IAAhCA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAqB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;IAL9DA,eAAiC;IAAjCA,oEAAiC;IAClCA,eACF;IADEA,kEACF;;;;;IANNA,2BAAoB;IAClBA,uEASM;IACRA,iBAAM;;;;IAVmBA,eAAS;IAATA,uCAAS;;;;;IAYlCA,0BAAoB;IAAAA,qCAAqB;IAAAA,iBAAK;;;ACjC9C,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,WAAyB;IAAzB,gBAAW,GAAXA,WAAW;IAC7B,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,QAAQ,GAAG,EAAW;IAC3B,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAC,SAAS;IACP,IAAI,CAACD,MAAM,GAAG,KAAK;IACnB,IAAI,CAACH,WAAW,CAACI,SAAS,EAAE,CAACC,SAAS,CAAEJ,MAAM,IAAI;MAChD,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACE,MAAM,GAAG,IAAI;IACpB,CAAC,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,CAACF,SAAS,EAAE;EAClB;EAEAG,WAAW,CAACC,EAAU;IACpB,IAAI,CAACP,MAAM,GAAG,IAAI,CAACA,MAAM,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC;EACtD;EAEAG,QAAQ;IACN,IAAG,IAAI,CAACT,QAAQ,CAACU,KAAK,CAACC,MAAM,IAAI,CAAC,IAAI,IAAI,CAACX,QAAQ,CAACM,EAAE,IAAI,IAAI,CAACP,MAAM,CAAC,IAAI,CAACA,MAAM,CAACY,MAAM,GAAC,CAAC,CAAC,CAACL,EAAE,EAC5F;IAEF,IAAI,CAACN,QAAQ,CAACY,MAAM,GAAG,IAAI,CAACb,MAAM,CAAC,CAAC,CAAC,CAACa,MAAM;IAE5C,IAAI,CAACX,MAAM,GAAG,KAAK;IACnB,IAAI,CAACH,WAAW,CAACW,QAAQ,CAAC,IAAI,CAACT,QAAQ,CAAC,CAACG,SAAS,CAAEU,KAAK,IAAI;MAC3D,IAAI,CAACd,MAAM,CAACe,OAAO,CAACD,KAAK,CAAC;MAC1B,IAAI,CAACZ,MAAM,GAAG,IAAI;MAClB,IAAI,CAACD,QAAQ,GAAG,EAAW;IAC7B,CAAC,CAAC;EACJ;;AAvCWJ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDQ5BxB,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MAEnBA,mCAA4B;MACVA,qBAAK;MAAAA,iBAAQ;MAC7BA,gCAA8D;MAAnCA;QAAA;MAAA,EAAyB;MAApDA,iBAA8D;MAE9DA,gCAAmB;MAAAA,wBAAQ;MAAAA,iBAAQ;MACnCA,gCAAwD;MAAjDA;QAAA;MAAA,EAA4B;MAAnCA,iBAAwD;MAExDA,iCAA6B;MAArBA;QAAA,OAASyB,cAAU;MAAA,EAAC;MAACzB,yBAAQ;MAAAA,iBAAS;MAGhDA,kEAWM;MAENA,gEAA8C;;;MArBjBA,eAAyB;MAAzBA,yCAAyB;MAG7CA,eAA4B;MAA5BA,4CAA4B;MAK/BA,eAAY;MAAZA,iCAAY;MAabA,eAAa;MAAbA,kCAAa","names":["i0","AlbumsComponent","constructor","postService","albums","newAlbum","loaded","getAlbums","subscribe","ngOnInit","removeAlbum","id","filter","x","addAlbum","title","length","userId","album","unshift","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/symbat/Desktop/Web Dev/lab6/src/app/albums/albums.component.html","/Users/symbat/Desktop/Web Dev/lab6/src/app/albums/albums.component.ts"],"sourcesContent":["<!--<h2>Album list</h2>-->\n\n<!--<fieldset>-->\n<!--  <input type=\"text\" [(ngModel)]=\"newAlbum.title\"><br/>-->\n<!--  <button (click)=\"addAlbum()\">Add album</button>-->\n<!--</fieldset>-->\n\n<!--<ul *ngIf=\"loaded\">-->\n<!--  <li *ngFor=\"let album of albums\">-->\n<!--    <a routerLink=\"/albums/{{album.id}}\">-->\n<!--      {{album.id}}) {{album.title}}-->\n<!--    </a>-->\n<!--  </li>-->\n<!--</ul>-->\n\n<!--<h3 *ngIf=\"!loaded\">Albums are loading...</h3>-->\n\n<h1>Album List</h1>\n\n<fieldset class=\"add-album\">\n  <label for=\"id\">ID : </label>\n  <input type=\"text\" id=\"id\" [(ngModel)]=\"newAlbum.id\" required>\n\n  <label for=\"title\">Title : </label>\n  <input [(ngModel)]=\"newAlbum.title\" id=\"title\" required>\n\n  <button (click)=\"addAlbum()\">Add post</button>\n</fieldset>\n\n<div *ngIf=\"loaded\">\n  <div *ngFor=\"let album of albums\" class=\"album\">\n\n    <div>\n      <a routerLink=\"/albums/{{album.id}}\" class=\"album-title\">\n        {{album.id}}. {{album.title}}\n      </a>\n    </div>\n\n    <button id=\"remove\" (click)=\"removeAlbum(album.id)\">Remove</button>\n  </div>\n</div>\n\n<h3 *ngIf=\"!loaded\">Albums are loading...</h3>\n","import { Component, OnInit } from '@angular/core';\nimport {Album} from \"../models\";\nimport {AlbumService} from \"../album.service\";\n\n@Component({\n  selector: 'app-albums',\n  templateUrl: './albums.component.html',\n  styleUrls: ['./albums.component.css']\n})\nexport class AlbumsComponent implements OnInit {\n  albums: Album[];\n  newAlbum: Album;\n  loaded: boolean;\n\n  constructor(private postService: AlbumService) {\n    this.albums = [];\n    this.newAlbum = {} as Album;\n    this.loaded = true;\n  }\n\n  getAlbums(){\n    this.loaded = false;\n    this.postService.getAlbums().subscribe((albums) => {\n      this.albums = albums;\n      this.loaded = true;\n    })\n  }\n\n  ngOnInit(): void {\n    this.getAlbums();\n  }\n\n  removeAlbum(id: number){\n    this.albums = this.albums.filter((x) => x.id !== id);\n  }\n\n  addAlbum(){\n    if(this.newAlbum.title.length == 0 || this.newAlbum.id <= this.albums[this.albums.length-1].id)\n      return;\n\n    this.newAlbum.userId = this.albums[0].userId;\n\n    this.loaded = false;\n    this.postService.addAlbum(this.newAlbum).subscribe((album) =>{\n      this.albums.unshift(album);\n      this.loaded = true;\n      this.newAlbum = {} as Album;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}